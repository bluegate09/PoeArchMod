package chingyu.poearchnemesismods


enum class ArchnemesisMod(
    val icon: Int,
    val modName: String,
    val description: Int, // 0 means no description
    val rewards: List<Int>? = null,
    val recipe: List<ArchnemesisMod>? = null
) {

    Toxic(R.drawable.mod_toxic, "Toxic", 0, listOf(Reward.GENERIC, Reward.GEMS)),
    ChaosWeaver(R.drawable.mod_chaos_weaver, "Chaos Weaver", 0, listOf(Reward.GEMS)),
    FrostWeaver(R.drawable.mod_frost_weaver, "Frost Weaver", 0, listOf(Reward.ARMOUR)),
    Permafrost(R.drawable.mod_permafrost, "Permafrost", 0, listOf(Reward.GENERIC, Reward.ARMOUR)),
    Hasted(R.drawable.mod_hasted, "Hasted", 0, listOf(Reward.GENERIC)),
    Deadeye(R.drawable.mod_deadeye, "DeadEye", 0, listOf(Reward.ARMOUR, Reward.TRINKETS)),
    Bombardier(R.drawable.mod_bombardier, "Bombardier", 0, listOf(Reward.WEAPONS, Reward.ARMOUR)),
    FlameWeaver(R.drawable.mod_flame_weaver, "FlameWeaver", 0, listOf(Reward.WEAPONS)),
    Incendiary(R.drawable.mod_incendiary, "Incendiary", 0, listOf(Reward.GENERIC, Reward.WEAPONS)),
    ArcaneBuffer(R.drawable.mod_arcane_buffer, "Arcane Buffer", 0, listOf(Reward.ESSENCES)),
    Echoist(R.drawable.mod_echoist, "Echoist", 0, listOf(Reward.GENERIC, Reward.CURRENCY)),
    StormWeaver(R.drawable.mod_storm_weaver, "Storm Weaver", 0, listOf(Reward.TRINKETS)),
    Dynamo(R.drawable.mod_dynamo, "Dynamo", 0, listOf(Reward.GENERIC, Reward.TRINKETS)),
    BoneBreaker(R.drawable.mod_bone_breaker, "Bone Breaker", 0, listOf(Reward.GENERIC, Reward.WEAPONS)),
    Bloodletter(R.drawable.mod_blood_letter, "Bloodletter", R.string.desc_bloodletter, listOf(Reward.WEAPONS, Reward.TRINKETS)),
    SteelInfused(R.drawable.mod_steel_infused, "Steel-infused", 0, listOf(Reward.WEAPONS)),
    Gargantuan(R.drawable.mod_gargantuan, "Gargantuan", 0, listOf(Reward.CURRENCY)),
    Berserker(R.drawable.mod_berserker, "Berserker", 0, listOf(Reward.UNIQUES)),
    Sentinel(R.drawable.mod_sentinel, "Sentinel", 0, listOf(Reward.ARMOUR, Reward.ARMOUR)),
    Juggernaut(R.drawable.mod_juggernaut, "Juggernaut", 0, listOf(Reward.HARBINGER)),
    Vampiric(R.drawable.mod_vampiric, "Vampiric", 0, listOf(Reward.FOSSILS)),
    Overcharged(R.drawable.mod_overcharged, "Overcharged", 0, listOf(Reward.TRINKETS, Reward.TRINKETS)),
    SoulConduit(R.drawable.mod_soul_conduit, "SoulConduit", 0, listOf(Reward.MAPS)),
    Opulent(R.drawable.mod_opulent,"Opulent",R.string.desc_opulent),
    Malediction(R.drawable.mod_malediction,"Malediction",0,listOf(Reward.DIVINATION)),
    Consecrator(R.drawable.mod_consecrator,"Consecrator",0,listOf(Reward.FRAGMENTS)),
    Frenzied(R.drawable.mod_frenzied, "Frenzied", 0, listOf(Reward.GENERIC, Reward.UNIQUES)),
    HeraldingMinions(R.drawable.mod_heralding_minions, "Heralding Minions", 0, listOf(Reward.FRAGMENTS, Reward.FRAGMENTS), listOf(Dynamo, ArcaneBuffer)),
    Necromancer(R.drawable.mod_nercomancer,"Necromancer",R.string.desc_necromancer,listOf(Reward.GENERIC),listOf(Bombardier,Overcharged)),
    Rejuvenating(R.drawable.mod_rejuvenating,"Rejuvenating",R.string.desc_rejuvenating,listOf(Reward.CURRENCY),listOf(Gargantuan,Vampiric)),
    Executioner(R.drawable.mod_executioner,"Executioner",0,listOf(Reward.LEGION,Reward.BREACH),listOf(Frenzied,Berserker)),
    EmpoweringMinions(R.drawable.mod_empowering_minions,"Empowering Minions",0,listOf(Reward.BLIGHT,Reward.RITUAL),listOf(Necromancer,Executioner,Gargantuan)),
    Assassin(R.drawable.mod_assassin,"Assassin",0,listOf(Reward.CURRENCY,Reward.CURRENCY),listOf(Deadeye,Vampiric)),
    Trickster(R.drawable.mod_trickster,"Trickster",0,listOf(Reward.CURRENCY,Reward.UNIQUES,Reward.DIVINATION),listOf(Overcharged,Assassin,Echoist)),
    Hexer(R.drawable.mod_hexer,"Hexer",0,listOf(Reward.ESSENCES,Reward.ESSENCES),listOf(ChaosWeaver,Echoist)),
    DroughtBringer(R.drawable.mod_drought_bringer,"Drought Bringer",0,listOf(Reward.LABYRINTH,Reward.LABYRINTH),listOf(Malediction,Deadeye)),
    Entangler(R.drawable.mod_entangler,"Entangler",0,listOf(Reward.FOSSILS,Reward.FOSSILS),listOf(Toxic,Bloodletter)),
    TemporalBubble(R.drawable.mod_temporal_bubble,"Temporal Bubble",0,listOf(Reward.HEIST,Reward.EXPEDITION),listOf(Juggernaut,Hexer,ArcaneBuffer)),
    TreantHorde(R.drawable.mod_treant_horde,"Treant Horde",R.string.desc_treant_horde,listOf(Reward.GENERIC),listOf(Toxic,Sentinel,SteelInfused)),
    FrostStrider(R.drawable.mod_frost_strider,"Frost Strider",0,listOf(Reward.ARMOUR,Reward.ARMOUR,Reward.ARMOUR),listOf(FrostWeaver,Hasted)),
    IcePrison(R.drawable.mod_ice_prison,"Ice Prison",R.string.desc_ice_prison,listOf(Reward.ARMOUR,Reward.ARMOUR),listOf(Permafrost,Sentinel)),
    SoulEater(R.drawable.mod_soul_eater,"SoulEater",0,listOf(Reward.MAPS),listOf(SoulConduit,Necromancer,Gargantuan)),
    FlameStrider(R.drawable.mod_flame_strider,"FlameStrider",0,listOf(Reward.WEAPONS,Reward.WEAPONS,Reward.WEAPONS),listOf(FlameWeaver,Hasted)),
    CorpseDetonator(R.drawable.mod_corpse_detonator,"Corpse Detonator",0,listOf(Reward.DIVINATION,Reward.DIVINATION),listOf(Necromancer,Incendiary)),
    Evocationist(R.drawable.mod_evocationist,"Evocationist",0,listOf(Reward.GENERIC,Reward.WEAPONS,Reward.ARMOUR,Reward.TRINKETS),listOf(FlameWeaver,FrostWeaver,StormWeaver)),
    MagmaBarrier(R.drawable.mod_magma_barrier,"Magma Barrier",R.string.desc_magma_barrier,listOf(Reward.WEAPONS),listOf(Incendiary,BoneBreaker)),
    MirrorImage(R.drawable.mod_magma_barrier,"MirrorImage",R.string.desc_mirror_image,listOf(Reward.SCARABS),listOf(Echoist,SoulConduit)),
    StormStrider(R.drawable.mod_storm_strider,"Storm Strider",0,listOf(Reward.TRINKETS,Reward.TRINKETS,Reward.TRINKETS),listOf(StormWeaver,Hasted)),
    ManaSiphoner(R.drawable.mod_mana_siphoner,"Mana Siphoner",R.string.desc_mana_siphoner,listOf(Reward.TRINKETS,Reward.TRINKETS),listOf(Consecrator,Dynamo)),
    Corrupter(R.drawable.mod_corrupter,"Corrupter",R.string.desc_corrupter,listOf(Reward.ABYSS,Reward.ABYSS),listOf(Bloodletter,ChaosWeaver)),
    Invulnerable(R.drawable.mod_invulnerable,"Invulnerable",0,listOf(Reward.DELIRIUM,Reward.METAMORPH),listOf(Sentinel,Juggernaut,Consecrator)),
    CrystalSkinned(R.drawable.mod_crystal_skinned,"Crystal-skinned",0,listOf(Reward.HARBINGER,Reward.HARBINGER),listOf(Permafrost,Rejuvenating,Berserker)),
    EmpoweredElements(R.drawable.mod_empowered_elements,"Empowered Elements",R.string.desc_empowered_elements,listOf(Reward.UNIQUES,Reward.UNIQUES),listOf(Evocationist,SteelInfused,ChaosWeaver)),
    Effigy(R.drawable.mod_effigy,"Effigy",R.string.desc_effigy,listOf(Reward.DIVINATION,Reward.DIVINATION),listOf(Hexer,Malediction,Corrupter)),
    LunarisTouched(R.drawable.mod_lunaris_touched,"Lunaris-touched",R.string.desc_lunaris_touched,listOf(Reward.UNIQUES),listOf(Invulnerable,FrostStrider,EmpoweringMinions)),
    SolarisTouched(R.drawable.mod_solaris_touched,"Solaris-touched",R.string.desc_solaris_touched,listOf(Reward.SCARABS),listOf(Invulnerable,MagmaBarrier,EmpoweringMinions)),
    ArakaaliTouched(R.drawable.mod_arakaali_touched,"Arakaali-touched",R.string.desc_arakaali_touched,listOf(Reward.DIVINATION),listOf(CorpseDetonator,Entangler,Assassin)),
    BrineKingTouched(R.drawable.mod_brine_king_touched,"Brine King-touched",R.string.desc_brine_king_touched,listOf(Reward.ARMOUR,Reward.ARMOUR,Reward.ARMOUR),listOf(IcePrison,StormStrider,HeraldingMinions)),
    TukohamaTouched(R.drawable.mod_tukohama_touched,"Tukohama-touched",R.string.desc_tukohama_touched,listOf(Reward.WEAPONS,Reward.WEAPONS,Reward.FRAGMENTS),listOf(BoneBreaker,Executioner,MagmaBarrier)),
    AbberathTouched(R.drawable.mod_abberath_touched,"Abberath-touched",R.string.desc_abberath_touched,listOf(Reward.TRINKETS,Reward.TRINKETS,Reward.MAPS),listOf(FlameStrider,Frenzied,Rejuvenating)),
    ShakariTouched(R.drawable.mod_shakari_touched,"Shakari-touched",R.string.desc_shakari_touched,listOf(Reward.UNIQUES),listOf(Entangler,SoulEater,DroughtBringer)),
    InnocenceTouched(R.drawable.mod_innocence_touched,"Innocence-touched",R.string.desc_innocence_touched,listOf(Reward.CURRENCY,Reward.CURRENCY,Reward.CURRENCY),listOf(LunarisTouched,SolarisTouched,MirrorImage,ManaSiphoner)),
    KitavaTouched(R.drawable.mod_kitava_touched,"Kitava-touched",R.string.desc_kitava_touched,listOf(Reward.GENERIC),listOf(TukohamaTouched,AbberathTouched,Corrupter,CorpseDetonator))

}